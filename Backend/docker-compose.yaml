services:
  # Redis Cache
  redis:
    image: redis
    container_name: django_user_redis
    ports:
      - 6379:6379
  # Celery worker service
  celery:
    container_name: celery_worker
    build: ./service_auth
    volumes:
      - ./service_auth:/app
    environment:
      - C_FORCE_ROOT=true
      - SECRET_KEY='django-insecure-57&r6sh!owg@tbjgob(dwdw*s9u7(pnmtq)dwyzl9ee#*y^@'
      - DATABASE_URL=postgres://desarrollo:desa1234*.#rollo@db_auth:5432/users_db
      - CELERY_BROKER_URL=amqp://user:password@rabbitmq:5672//
    depends_on:
      - db_auth
      - redis
      - rabbitmq
    ports: []
    command: celery -A service_auth worker -l INFO

  # RabbitMQ
  rabbitmq:
    image: "rabbitmq:management"
    container_name: rabbitmq
    ports:
      - "15672:15672" # Puerto de acceso a la interfaz de administración
      - "5672:5672" # Puerto para la comunicación de RabbitMQ
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
  
  #service AUTH 
  user_service:
    container_name: service_auth
    build: ./service_auth
    volumes:
      - ./service_auth:/app
    ports:
      - 8000:8000
    environment:
      - SECRET_KEY='django-insecure-57&r6sh!owg@tbjgob(dwdw*s9u7(*pnmtq*)dwyzl9ee#*y^@'
      - DEBUG=True
      - DATABASE_URL=postgres://desarrollo:desa1234*.#rollo@db_auth:5432/users_db
      - CELERY_BROKER_URL=amqp://user:password@rabbitmq:5672//
    depends_on:
      - db_auth
      - redis
      - rabbitmq
    command: >
      bash -c "
      python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py migrate oauth2_provider &&
      python manage.py shell -c 'from Users.models import User; 
      user = User(username=\"desarrollo\", email=\"desarrollo.software@robotica.com.co\", user_name=\"Desarrollo\", user_last_name=\"Usuario\", user_enable=True, user_lock=False, is_staff=True); 
      user.set_password(\"Des4rr0ll0*\");
      user.save()' &&
      python manage.py runserver 0.0.0.0:8000
      "

  # Database auth (PostgreSQL)
  db_auth:
    image: postgres
    container_name: db_user_postgresql
    restart: always
    environment:
      POSTGRES_DB: users_db
      POSTGRES_USER: desarrollo
      POSTGRES_PASSWORD: desa1234*.#rollo
    ports:
      - 54322:5432
    volumes:
      - .dbdata_auth:/var/lib/postgresql

  #service log
  log_service:
    container_name: service_logs
    build: ./service_logs
    volumes:
      - ./service_logs:/app
    ports:
      - 8001:8001
    environment:
      - SECRET_KEY='django-insecure-)7xkxwb1mz%14+9ga74^k#qu^o=y)l&w#91g@=fxbksrt*6^rr'
      - DEBUG=True
      - DATABASE_URL=postgres://desarrollo:desa1234*.#rollo@db_logs:5432/logs_db 
    depends_on:
      - db_logs
    command: >
      bash -c "
      python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py migrate oauth2_provider &&
      python manage.py runserver 0.0.0.0:8001
      "
  
  # Database logs (PostgreSQL)
  db_logs:
   image: postgres
   container_name: db_logs_postgresql
   restart: always
   environment:
      POSTGRES_DB: logs_db
      POSTGRES_USER: desarrollo
      POSTGRES_PASSWORD: desa1234*.#rollo
   ports:
    - 54323:5432
   volumes:
      - .dbdata_logs:/var/lib/postgresql



volumes:
  .dbdata_auth:
  .dbdata_logs:
  rabbitmq_data:
